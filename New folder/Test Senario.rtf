{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\colortbl ;\red255\green0\blue0;}
{\*\generator Riched20 10.0.14393}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\cf1\ul\b\f0\fs22\lang9\par
General Test Scenarios\cf0\ulnone\b0\par
\par
1. All mandatory fields should be validated and indicated by asterisk (*) symbol\par
2. Validation error messages should be displayed properly at correct position\par
3. All error messages should be displayed in same CSS style (e.g. using red color)\par
4. General confirmation messages should be displayed using CSS style other than error messages style (e.g. using green color)\par
5. Tool tips text should be meaningful\par
6. Dropdown fields should have first entry as blank or text like \lquote Select\rquote\par
7. Delete functionality for any record on page should ask for confirmation\par
8. Select/deselect all records options should be provided if page supports record add/delete/update functionality\par
9. Amount values should be displayed with correct currency symbols\par
10. Default page sorting should be provided\par
11. Reset button functionality should set default values for all fields\par
12. All numeric values should be formatted properly\par
13. Input fields should be checked for max field value. Input values greater than specified max limit should not be accepted or stored in database\par
14. Check all input fields for special characters\par
15. Field labels should be standard e.g. field accepting user\rquote s first name should be labeled properly as \lquote First Name\rquote\par
16. Check page sorting functionality after add/edit/delete operations on any record\par
17. Check for timeout functionality. Timeout values should be configurable. Check application behavior after operation timeout\par
18. Check cookies used in an application\par
19. Check if downloadable files are pointing to correct file paths\par
20. All resource keys should be configurable in config files or database instead of hard coding\par
21. Standard conventions should be followed throughout for naming resource keys\par
22. Validate markup for all web pages (validate HTML and CSS for syntax errors) to make sure it is compliant with the standards\par
23. Application crash or unavailable pages should be redirected to error page\par
24. Check text on all pages for spelling and grammatical errors\par
25. Check numeric input fields with character input values. Proper validation message should appear\par
26. Check for negative numbers if allowed for numeric fields\par
27. Check amount fields with decimal number values\par
28. Check functionality of buttons available on all pages\par
29. User should not be able to submit page twice by pressing submit button in quick succession.\par
30. Divide by zero errors should be handled for any calculations\par
31. Input data with first and last position blank should be handled correctly\par
\par
\cf1\ul\b GUI and Usability Test Scenarios\cf0\ulnone\b0\par
\par
1. All fields on page (e.g. text box, radio options, dropdown lists) should be aligned properly\par
2. Numeric values should be right justified unless specified otherwise\par
3. Enough space should be provided between field labels, columns, rows, error messages etc.\par
4. Scroll bar should be enabled only when necessary\par
5. Font size, style and color for headline, description text, labels, infield data, and grid info should be standard as specified in SRS\par
6. Description text box should be multi-line\par
7. Disabled fields should be grayed out and user should not be able to set focus on these fields\par
8. Upon click of any input text field, mouse arrow pointer should get changed to cursor\par
9. User should not be able to type in drop down select lists\par
10. Information filled by users should remain intact when there is error message on page submit. User should be able to submit the form again by correcting the errors\par
11. Check if proper field labels are used in error messages\par
12. Dropdown field values should be displayed in defined sort order\par
13. Tab and Shift+Tab order should work properly\par
14. Default radio options should be pre-selected on page load\par
15. Field specific and page level help messages should be available\par
16. Check if correct fields are highlighted in case of errors\par
17. Check if dropdown list options are readable and not truncated due to field size limit\par
18. All buttons on page should be accessible by keyboard shortcuts and user should be able to perform all operations using keyboard\par
19. Check all pages for broken images\par
20. Check all pages for broken links\par
21. All pages should have title\par
22. Confirmation messages should be displayed before performing any update or delete operation\par
23. Hour glass should be displayed when application is busy\par
24. Page text should be left justified\par
25. User should be able to select only one radio option and any combination for check boxes.\par
\cf1\ul\b\par
Test Scenarios for Filter Criteria\par
\cf0\ulnone\b0\par
1. User should be able to filter results using all parameters on the page\par
2. Refine search functionality should load search page with all user selected search parameters\par
3. When there is at least one filter criteria is required to perform search operation, make sure proper error message is displayed when user submits the page without selecting any filter criteria.\par
4. When at least one filter criteria selection is not compulsory user should be able to submit page and default search criteria should get used to query results\par
5. Proper validation messages should be displayed for invalid values for filter criteria\par
\par
\cf1\ul\b Test Scenarios for Result Grid\cf0\ulnone\b0\par
\par
1. Page loading symbol should be displayed when it\rquote s taking more than default time to load the result page\par
2. Check if all search parameters are used to fetch data shown on result grid\par
3. Total number of results should be displayed on result grid\par
4. Search criteria used for searching should be displayed on result grid\par
5. Result grid values should be sorted by default column.\par
6. Sorted columns should be displayed with sorting icon\par
7. Result grids should include all specified columns with correct values\par
8. Ascending and descending sorting functionality should work for columns supported with data sorting\par
9. Result grids should be displayed with proper column and row spacing\par
10. Pagination should be enabled when there are more results than the default result count per page\par
11. Check for Next, Previous, First and Last page pagination functionality\par
12. Duplicate records should not be displayed in result grid\par
13. Check if all columns are visible and horizontal scroll bar is enabled if necessary\par
14. Check data for dynamic columns (columns whose values are calculated dynamically based on the other column values)\par
15. For result grids showing reports check \lquote Totals\rquote  row and verify total for every column\par
16. For result grids showing reports check \lquote Totals\rquote  row data when pagination is enabled and user navigates to next page\par
17. Check if proper symbols are used for displaying column values e.g. % symbol should be displayed for percentage calculation\par
18. Check result grid data if date range is enabled\par
\par
------------\par
\cf1\ul\b Test Scenarios for a Window\cf0\ulnone\b0\par
\par
1. Check if default window size is correct\par
2. Check if child window size is correct\par
3. Check if there is any field on page with default focus (in general, the focus should be set on first input field of the screen)\par
4. Check if child windows are getting closed on closing parent/opener window\par
5. If child window is opened, user should not be able to use or update any field on background or parent window\par
6. Check window minimize, maximize and close functionality\par
7. Check if window is re-sizable\par
8. Check scroll bar functionality for parent and child windows\par
9. Check cancel button functionality for child window\par
\par
\cf1\ul\b Database Testing Test Scenarios\cf0\ulnone\b0\par
\par
1. Check if correct data is getting saved in database upon successful page submit\par
2. Check values for columns which are not accepting null values\par
3. Check for data integrity. Data should be stored in single or multiple tables based on design\par
4. Index names should be given as per the standards e.g. IND_<Tablename>_<ColumnName>\par
5. Tables should have primary key column\par
6. Table columns should have description information available (except for audit columns like created date, created by etc.)\par
7. For every database add/update operation log should be added\par
8. Required table indexes should be created\par
9. Check if data is committed to database only when the operation is successfully completed\par
10. Data should be rolled back in case of failed transactions\par
11. Database name should be given as per the application type i.e. test, UAT, sandbox, live (though this is not a standard it is helpful for database maintenance)\par
12. Database logical names should be given according to database name (again this is not standard but helpful for DB maintenance)\par
13. Stored procedures should not be named with prefix \ldblquote sp_\rdblquote\par
14. Check is values for table audit columns (like createddate, createdby, updatedate, updatedby, isdeleted, deleteddate, deletedby etc.) are populated properly\par
15. Check if input data is not truncated while saving. Field length shown to user on page and in database schema should be same\par
16. Check numeric fields with minimum, maximum, and float values\par
17. Check numeric fields with negative values (for both acceptance and non-acceptance)\par
18. Check if radio button and dropdown list options are saved correctly in database\par
19. Check if database fields are designed with correct data type and data length\par
20. Check if all table constraints like Primary key, Foreign key etc. are implemented correctly\par
21. Test stored procedures and triggers with sample input data\par
22. Input field leading and trailing spaces should be truncated before committing data to database\par
23. Null values should not be allowed for Primary key column\par
\par
\cf1\ul\b Test Scenarios for Image Upload Functionality\cf0\ulnone\b0\par
\par
(Also applicable for other file upload functionality)\par
1. Check for uploaded image path\par
2. Check image upload and change functionality\par
3. Check image upload functionality with image files of different extensions (e.g. JPEG, PNG, BMP etc.)\par
4. Check image upload functionality with images having space or any other allowed special character in file name\par
5. Check duplicate name image upload\par
6. Check image upload with image size greater than the max allowed size. Proper error message should be displayed.\par
7. Check image upload functionality with file types other than images (e.g. txt, doc, pdf, exe etc.). Proper error message should be displayed\par
8. Check if images of specified height and width (if defined) are accepted otherwise rejected\par
9. Image upload progress bar should appear for large size images\par
10. Check if cancel button functionality is working in between upload process\par
11. Check if file selection dialog shows only supported files listed\par
12. Check multiple images upload functionality\par
13. Check image quality after upload. Image quality should not be changed after upload\par
14. Check if user is able to use/view the uploaded images\par
\cf1\ul\b\par
Test Scenarios for Sending Emails\par
\cf0\ulnone\b0\par
(Test cases for composing or validating emails are not included)\par
(Make sure to use dummy email addresses before executing email related tests)\par
1. Email template should use standard CSS for all emails\par
2. Email addresses should be validated before sending emails\par
3. Special characters in email body template should be handled properly\par
4. Language specific characters (e.g. Russian, Chinese or German language characters) should be handled properly in email body template\par
5. Email subject should not be blank\par
6. Placeholder fields used in email template should be replaced with actual values e.g. \{Firstname\} \{Lastname\} should be replaced with individuals first and last name properly for all recipients\par
7. If reports with dynamic values are included in email body, report data should be calculated correctly\par
8. Email sender name should not be blank\par
9. Emails should be checked in different email clients like Outlook, Gmail, Hotmail, Yahoo! mail etc.\par
10. Check send email functionality using TO, CC and BCC fields\par
11. Check plain text emails\par
12. Check HTML format emails\par
13. Check email header and footer for company logo, privacy policy and other links\par
14. Check emails with attachments\par
15. Check send email functionality to single, multiple or distribution list recipients\par
16. Check if reply to email address is correct\par
17. Check sending high volume of emails\par
\par
\cf1\ul\b Test Scenarios for Excel Export Functionality\par
\cf0\ulnone\b0\par
1. File should get exported in proper file extension\par
2. File name for the exported Excel file should be as per the standards e.g. if file name is using timestamp, it should get replaced properly with actual timestamp at the time of exporting the file\par
3. Check for date format if exported Excel file contains date columns\par
4. Check number formatting for numeric or currency values. Formatting should be same as shown on page\par
5. Exported file should have columns with proper column names\par
6. Default page sorting should be carried in exported file as well\par
7. Excel file data should be formatted properly with header and footer text, date, page numbers etc. values for all pages\par
8. Check if data displayed on page and exported Excel file is same\par
9. Check export functionality when pagination is enabled\par
10. Check if export button is showing proper icon according to exported file type e.g. Excel file icon for xls files\par
11. Check export functionality for files with very large size\par
12. Check export functionality for pages containing special characters. Check if these special characters are exported properly in Excel file\par
\par
\cf1\ul\b Performance Testing Test Scenarios\cf0\ulnone\b0\par
\par
1. Check if page load time is within acceptable range\par
2. Check page load on slow connections\par
3. Check response time for any action under light, normal, moderate and heavy load conditions\par
4. Check performance of database stored procedures and triggers\par
5. Check database query execution time\par
6. Check for load testing of application\par
7. Check for stress testing of application\par
8. Check CPU and memory usage under peak load condition\par
\par
\cf1\ul\b Security Testing Test Scenarios\cf0\ulnone\b0\par
\par
1. Check for SQL injection attacks\par
2. Secure pages should use HTTPS protocol\par
3. Page crash should not reveal application or server info. Error page should be displayed for this\par
4. Escape special characters in input\par
5. Error messages should not reveal any sensitive information\par
6. All credentials should be transferred over an encrypted channel\par
7. Test password security and password policy enforcement\par
8. Check application logout functionality\par
9. Check for Brute Force Attacks\par
10. Cookie information should be stored in encrypted format only\par
11. Check session cookie duration and session termination after timeout or logout\par
11. Session tokens should be transmitted over secured channel\par
13. Password should not be stored in cookies\par
14. Test for Denial of Service attacks\par
15. Test for memory leakage\par
16. Test unauthorized application access by manipulating variable values in browser address bar\par
17. Test file extension handing so that exe files are not uploaded and executed on server\par
18. Sensitive fields like passwords and credit card information should not have auto complete enabled\par
19. File upload functionality should use file type restrictions and also anti-virus for scanning uploaded files\par
20. Check if directory listing is prohibited\par
21. Password and other sensitive fields should be masked while typing\par
22. Check if forgot password functionality is secured with features like temporary password expiry after specified hours and security question is asked before changing or requesting new password\par
23. Verify CAPTCHA functionality\par
24. Check if important events are logged in log files\par
25. Check if access privileges are implemented correctly\par
}
 